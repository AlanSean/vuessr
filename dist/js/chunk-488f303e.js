(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-488f303e"],{"3c7f":function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},r=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"vueSSR"},[n("a",{attrs:{href:"https://ssr.vuejs.org/zh/",target:"_blank"}},[n("img",{attrs:{src:"https://cloud.githubusercontent.com/assets/499550/17607895/786a415a-5fee-11e6-9c11-45a2cfdf085c.png",alt:"vuessr"}})]),n("h1",[t._v("什么是服务器端渲染 (SSR)？")]),n("p",[t._v('\n        Vue.js 是构建客户端应用程序的框架。默认情况下，可以在浏览器中输出 Vue 组件，进行生成 DOM 和操作 DOM。然而，也可以将同一个组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将这些静态标记"激活"为客户端上完全可交互的应用程序。\n\n        服务器渲染的 Vue.js 应用程序也可以被认为是"同构"或"通用"，因为应用程序的大部分代码都可以在服务器和客户端上运行。\n    ')])])}],s={name:"vueSSR",asyncData:function(t){var e=t.store,n=t.route;return e.dispatch("fetchItem",n.path)},computed:{item:function(){return this.$store.state.items[this.$route.path]}},data:function(){return{}}},u=s,c=u,i=n("2877");function o(t){var e=n("d747");e.__inject__&&e.__inject__(t)}var f=Object(i["a"])(c,a,r,!1,o,"412d5ade","17271d44");e["default"]=f.exports},"40f5":function(t,e,n){var a=n("d5d5");"string"===typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);var r=n("499e").default;r("59939f0f",a,!0,{sourceMap:!1,shadowMode:!1})},d5d5:function(t,e,n){e=t.exports=n("2350")(!1),e.push([t.i,".vueSSR img[data-v-412d5ade]{width:70%}",""])},d747:function(t,e,n){"use strict";n.r(e);var a=n("40f5");for(var r in a)["default"].indexOf(r)<0&&function(t){n.d(e,t,(function(){return a[t]}))}(r)}}]);
//# sourceMappingURL=chunk-488f303e.js.map